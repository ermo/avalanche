extends root

block title
    title Avalanche
        
block content
    div.container

        div.row.pb-4

            // Memory use
            div.col-4.col-sm-4.col-lg-4
                div.card
                    div.card-body
                        h5.card-title.opacity-75 Memory
                        div.card-lg.chart(avalanche:data-source="memory")

            // Disk usage
            div.col-4.col-sm-4.col-lg-4
                div.card
                    div.card-body
                        h5.card-title.opacity-75 Disk
                        div.card-lg.chart(avalanche:data-source="disk")

            // CPU usage
            div.col-4.col-sm-4.col-lg-4
                div.card
                    div.card-body
                        h5.card-title.opacity-75 CPU
                        div.card-lg.chart(avalanche:data-source="cpu")


        div.row
            div.col-8.col-sm-8.col-lg-8
                div.card
                    div.card-header
                        h3.card-title Connections
                    div.card-body
                        p To pair this builder with Summit, you'll need this public key
                        pre #{publicKey}
            div.col-4.col-sm-4.col-lg-4
                - import moss.core.memoryinfo;
                - import moss.core.sizing;
                - import core.cpuid;
                - import std.string : replace;
                - import std.parallelism : totalCPUs;
                - scope auto inf = new MemoryInfo();
                div.card
                    div.card-header
                        h3.card-title System Information
                    div.card-body
                        div.row.d-flex
                            div.col.text-muted CPU
                            div.col-auto!=processor().replace("(TM)", "&trade;").replace("(R)", "&reg;")
                        div.row.d-flex
                            div.col.text-muted Cores
                            div.col-auto=totalCPUs()
                        div.row.d-flex
                            div.col.text-muted Total memory
                            - auto memTotal = inf.total;
                            div.col-auto=formattedSize(memTotal)
                        div.row.d-flex
                            div.col.text-muted Free memory
                            - auto memFree = inf.free;
                            div.col-auto=formattedSize(memFree)
                        div.row.d-flex
                            div.col.text-muted Available memory
                            - auto memAvail = inf.available;
                            div.col-auto=formattedSize(memAvail)
                        - import std.file : getAvailableDiskSpace;
                        div.row.d-flex
                            div.col.text-muted Available disk cache
                            - auto leftR = cast(double) getAvailableDiskSpace("/");
                            div.col-auto=formattedSize(leftR)
                        div.row.d-flex
                            div.col.text-muted Available build cache
                            - auto left = cast(double) getAvailableDiskSpace("/var/cache/boulder");
                            div.col-auto=formattedSize(left)
                        - string[] features;
                        - if (avx()) features ~= "AVX";
                        - if (avx2()) features ~= "AVX2";
                        - if (sse41()) features ~= "SSE4.1";
                        - if (sse42()) features ~= "SSE4.2";
                        div.row.d-flex
                            div.col.text-muted Features
                        div.row.d-flex
                            div.col
                            div.col-auto
                                - foreach (f; features) {
                                    span.status.m-1 #{f}
                                - }

block scripts
    script(src="https://cdn.jsdelivr.net/npm/apexcharts", module)
    script(src="/static/charts.js", module)